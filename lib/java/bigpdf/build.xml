<?xml version="1.0"?>
<!-- ==================================================================== -->
<!--
     Build file for bigpdf 1.0 - for use with the Ant build tool

     Setup instructions:
       Before running an Ant build, you must

       - set the JAVA_HOME environment variable to the JDK root directory

     Build Instructions:

       - build the compile target to make the .class files
       - build the jar target to make the .jar file

     Author:
       Jens Stavnstrup, <stavnstrup@mil.dk>

     Copyright:
       (C) 2014 Danish Defense Acquisition and Logistics Organisation.

                                                                          -->
<!-- ==================================================================== -->
<project name="bigpdf" default="jar" basedir=".">
  <property name="src.dir" value="./src"/>
  <property name="bin.dir" value="./bin"/>

  <!-- Allow properties following these statements to be overridden -->
  <property file="build.properties"/>
  <property file="default.properties"/>

  <!-- Name and version information -->
  <property name="version.major" value="1"/>
  <property name="version.minor" value="0"/>
  <property name="version.isbeta" value=""/><!-- values: 'b'|'' -->
  <property name="version.release" value="1"/>
  <property name="version" value="${version.major}.${version.minor}.${version.isbeta}${version.release}" />

  <property name="name.bigpdf" value="bigpdf"/>
  <property name="impl.name" value="bigpdf"/>
  <property name="impl.version" value="${version}"/>

  <!-- Location of the system's temporary directory; all output sent here -->
  <property name="tmp.dir" value="."/>

  <!-- Overall distribution unit -->
  <property name="dist.basename" value="bigpdf-${version}"/>
  <property name="dist.dir" value="${tmp.dir}/build"/>

  <!-- Build directories -->
  <property name="build.dir" value="${tmp.dir}/build"/>
  <property name="build.classes.dir" value="${build.dir}/classes"/>

  <!-- Source constants and directories -->
  <property name="bigpdf.basedir" value="dk/stavnstrup/nisp"/>

  <property name="bigpdf.apps" value="${bigpdf.basedir}/apps" />
  <property name="bigpdf.pdf" value="${bigpdf.subdir}/pdf" />
  <property name="bigpdf.jar.location" value="${build.dir}" />
  <property name="bigpdf.jar.name" value="bigpdf.jar" />
  <property name="bigpdf.jar" value="${bigpdf.jar.location}/${bigpdf.jar.name}" />

  <!-- Test results directory -->
  <property name="check.dir" value="${tmp.dir}/${project.name}/check"/>

  <!-- Build properties -->
  <property name="build.debug" value="off"/>
  <property name="build.deprecation" value="on"/>
  <property name="build.optimize" value="on"/>

  <!-- Document constants -->
  <property name="company.name" value="Danish Defence Acquisition and Logistic Organisation."/>
  <property name="copyright.date" value="2014"/>
  <property name="copyright.message"
            value="Copyright &#169; ${copyright.date} ${company.name}. All Rights Reserved."/>

  <!-- Other jar files -->
  <property name="itext.jar.name" value="iText-1.4.5.jar"/>
  <property name="itext.jar" value="${basedir}/../../${itext.jar.name}"/>

  <path id="compile.class.path">
    <!-- Ensure the selected parser.jar file is used to compile against -->
    <pathelement location="${itext.jar}" />
    <pathelement path="${java.class.path}" />
  </path>

  <!-- Public Targets -->
  <target name="all"
          depends="jar"
          description="This is the default target.  Compiles the program.">
  </target>

  <target name="compile" depends="init"
    description="Compile all classes">
   <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
          debug="${build.debug}"
          deprecation="${build.deprecation}"
          optimize="${build.optimize}">

      <include name="${bigpdf.basedir}/*.java"/>

      <include name="${bigpdf.apps}/*.java"/>
      <include name="${bigpdf.pdf}/*.java"/>
      <include name="com/lowagie/text/pdf/*.java"/>
      <classpath refid="compile.class.path"/>
   </javac>
  </target>

  <target name="jar" depends="compile"
    description="Jar all classes">
    <echo message="Jarring ${bigpdf.jar} from ${build.classes.dir}" />
    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}" includes="**/*.properties"/>
    </copy>

    <jar jarfile="${bigpdf.jar}" manifest="${build.dir}/manifest.bigpdf"
         basedir="${build.classes.dir}">
      <include name="bigpdf.properties"/>
      <include name="dk/**"/>
      <include name="com/**"/>
    </jar>
  </target>


  <target name="clean"
          description="Deletes all files that are generated by the build.">
    <delete dir="${build.dir}"/>
  </target>


  <!-- Internal Targets -->
  <target name="init">
    <echo message="Building ${name.bigpdf} (version: ${version}) Buildfile: $Revision: 1.2 $"/>
    <mkdir dir="${build.classes.dir}" />
    <filter token="impl.version" value="${impl.version}"/>
    <filter token="impl.name" value="${impl.name}"/>
    <copy todir="${build.dir}" file="${src.dir}/manifest.bigpdf" filtering="true"/>
    <copy todir="${build.dir}" file="${basedir}/lib/bigpdf.properties" filtering="true"/>
  </target>
</project>
