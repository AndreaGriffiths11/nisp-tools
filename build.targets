<?xml version="1.0" encoding="utf-8"?>
<project>
   <target name="valid" depends="vol1.valid, vol2.valid, vol3.valid, vol4.valid, vol5.valid, vol6.valid" description="* Validate all source documents"/>
   <target name="resolve" depends="init, vol1.resolve, vol2.resolve, vol3.resolve, vol4.resolve, vol5.resolve, vol6.resolve"/>
   <target name="olinks" depends="init, vol1.olinks, vol2.olinks, vol3.olinks, vol4.olinks, vol5.olinks, vol6.olinks"/>
   <target name="getfigs" depends="init, vol1.getfigs, vol2.getfigs, vol3.getfigs, vol4.getfigs, vol5.getfigs, vol6.getfigs"/>
   <target name="html" depends="init, master, acronyms, vol1.html, vol2.html, vol3.html, vol4.html, vol5.html, vol6.html" description="* Create all HTML files destined for the web"/>
   <target name="pdf" depends="init, vol1.pdf, vol2.pdf, vol3.pdf, vol4.pdf, vol5.pdf, vol6.pdf" description="* Create a PDF version of NISP"/>
   <target name="svg.required">
      <mkdir dir="${build.dir}/figures"/>
      <copy preservelastmodified="true" todir="${build.dir}/figures">
         <fileset dir="${src.dir}/figures/">
            <include name="*.svg"/>
            <exclude name="obsolete/*.svg"/>
         </fileset>
      </copy>
      <uptodate property="svg.notRequired">
         <srcfiles includes="*.svg" dir="${build.dir}/figures"/>
         <mapper type="glob" from="*.svg" to="${build.dir}/figures/*.jpg"/>
      </uptodate>
   </target>
   <target name="svg" depends="init, svg.required" unless="svg.notRequired">
      <echo message="Create figures for HTML (${dpi.raster} dpi)"/>
      <rasterize result="image/jpeg" quality="0.9" dpi="${dpi.raster}" destdir="${build.dir}/figures/">
         <fileset dir="${build.dir}/figures/">
            <include name="*.svg"/>
            <depend targetdir="${build.dir}/figures/">
               <mapper type="glob" from="*.svg" to="*.jpg"/>
            </depend>
         </fileset>
      </rasterize>
   </target>
  
    
    
    
  

  
    <!-- Directories -->
   <property name="src.vol1" value="${src.dir}/volume1"/>
   <property name="build.vol1" value="${build.dir}/volume1"/><!-- Source file names -->
   <property name="vol1.main.src" value="vol1.xml"/>
   <property name="vol1.all.src" value="vol1.xml"/>
   <property name="vol1.resolve.src" value="vol1-resolved.xml"/>
   <property name="vol1.pdf.file" value="NISP-Vol1-v${src-version-major}${internet.postfix}.pdf"/>
   <property name="vol1.wml.file" value="vol1.wml"/>
   <property name="xsl-resolve-vol1" value="resolve.xsl"/>
   <target name="vol1" description="* Create Volume 1 in XHTML and PDF" depends="vol1.html, vol1.pdf"/>
   <target name="vol1.valid">
      <xmlvalidate failonerror="no" classname="org.apache.xerces.parsers.SAXParser">
         <fileset dir="${src.vol1}" includes="${vol1.main.src}"/>
         <attribute name="http://xml.org/sax/features/namespaces" value="true"/>
         <attribute name="http://apache.org/xml/features/xinclude" value="true"/>
         <xmlcatalog refid="allcatalogs"/>
      </xmlvalidate>
   </target>
   <target name="vol1.resolve.check">
      <uptodate property="vol1-resolve.notRequired" targetfile="${build.resolve}/${vol1.resolve.src}">
         <srcfiles dir="${src.vol1}" includes="${vol1.all.src}"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-vol1}"/>
      </uptodate>
   </target>
   <target name="vol1.resolve" unless="vol1-resolve.notRequired" depends="init, vol1.resolve.check">
      <echo message="Resolve Volume 1"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol1}">
         <arg line="${xslt.opts} -o ${build.resolve}/${vol1.resolve.src} ${src.vol1}/${vol1.main.src} ${xsl-styles.dir}/resolve/${xsl-resolve-vol1} docid=vol1 documentdir=volume1 use.show.indexterms=${use.show.indexterms}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol1-olinks.check" depends="init">
      <uptodate property="vol1-olinks.notRequired" targetfile="${src.dir}/olinks/vol1-target.db">
         <srcfiles dir="${build.resolve}" includes="${vol1.resolve.src}"/>
      </uptodate>
   </target>
   <target name="vol1.olinks" depends="init, vol1.resolve, vol1-olinks.check" unless="vol1-olinks.notRequired">
      <mkdir dir="${build.dir}/volume1"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol1}">
         <arg line="${build.resolve}/${vol1.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} target.database.document=${src.dir}/olinks/olinksdb.xml current.docid=vol1 collect.xref.targets=only"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <move file="${build.vol1}/target.db" tofile="${src.dir}/olinks/vol1-target.db"/>
   </target>
   <target name="vol1.getfigs" depends="svg">
      <mkdir dir="${build.dir}/volume1/figures"/>
      <copy preservelastmodified="true" todir="${build.dir}/htmlhelp/figures/volume1">
         <fileset dir="${build.dir}/volume1/figures">
            <include name="*.jpg"/>
         </fileset>
      </copy>
   </target>
   <target name="vol1.html.check" depends="init">
      <mkdir dir="${build.dir}/volume1"/>
      <uptodate property="vol1-html.notRequired" targetfile="${build.vol1}/index.html">
         <srcfiles dir="${build.resolve}" includes="${vol1.resolve.src}"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-xhtml}"/>
      </uptodate>
   </target>
   <target name="vol1.html" description="* Create Volume 1 in XHTML" depends="svg, vol1.resolve, vol1.html.check" unless="vol1-html.notRequired">
      <echo message="Create Volume 1 as chunked XHTML pages"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol1}">
         <arg line="${xslt.opts} ${build.resolve}/${vol1.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} ${internet.opts} docid=vol1 pdf.prefix=NISP-Vol1 use.para.numbering=${use.para.numbering} use.portal.design=${use.portal.design}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
   </target>
   <target name="vol1.pdf.check" depends="init">
      <uptodate property="vol1-pdf.notRequired" targetfile="${build.fo}/${vol1.pdf.file}">
         <srcfiles dir="${build.resolve}" includes="${vol1.resolve.src}"/>
         <srcfiles dir="${build.dir}/figures/" includes="*.jpg"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-fo}"/>
      </uptodate>
   </target>
   <target name="vol1.pdf" description="* Create Volume 1 in PDF" depends="layout-fo, svg, vol1.resolve, vol1.pdf.check" unless="vol1-pdf.notRequired">
      <echo message="Create Volume 1 print version"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.fo}">
         <arg line="${xslt.opts} -o vol1.fo ${build.resolve}/${vol1.resolve.src} ${xsl-fo.dir}/${xsl-fo} ${internet.opts} pdf.prefix=NISP-Vol1 use.para.numbering=${use.para.numbering}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <echo message="Transforming Volume 1.fo to PDF"/>
      <fop basedir="${build.fo}/" fofile="${build.fo}/vol1.fo" outfile="${build.fo}/vol1.pdf" format="application/pdf" messagelevel="${fop.message}"/>
      <echo message="Creating Volume 1 meta information using pdffix"/>
      <java classname="dk.stavnstrup.nisp.apps.MakeDocInfo" fork="yes" dir="${build.fo}">
         <arg line="&#34;${tool-version}&#34; &#34;Introduction and Management&#34; vol1.pdf ${vol1.pdf.file}"/>
         <classpath refid="lib-fop-classpath"/>
      </java>
      <delete file="${build.fo}/vol1.pdf"/>
   </target>
   <target name="vol1.zip" description="* Create source archive of Volume 1">
      <tstamp/>
      <echo message="Creating src archive of Volume 1"/>
      <mkdir dir="${zip.dir}"/>
      <zip zipfile="${zip.dir}/nisp-src-vol1-${DSTAMP}.zip">
         <zipfileset dir="${src.dir}/volume1" prefix="volume1/" includes="**/*" excludes="**/*~,**/rtf/*.*, **/*/*.ced,**/*/*.fo"/>
      </zip>
   </target>
  

  
    <!-- Directories -->
   <property name="src.vol2" value="${src.dir}/volume2"/>
   <property name="build.vol2" value="${build.dir}/volume2"/><!-- Source file names -->
   <property name="vol2.main.src" value="vol2.xml"/>
   <property name="vol2.all.src" value="vol2.xml"/>
   <property name="vol2.resolve.src" value="vol2-resolved.xml"/>
   <property name="vol2.pdf.file" value="NISP-Vol2-v${src-version-major}${internet.postfix}.pdf"/>
   <property name="vol2.wml.file" value="vol2.wml"/>
   <property name="xsl-resolve-vol2" value="resolve2.xsl"/>
   <target name="vol2" description="* Create Volume 2 in XHTML and PDF" depends="vol2.html, vol2.pdf"/>
   <target name="vol2.valid">
      <xmlvalidate failonerror="no" classname="org.apache.xerces.parsers.SAXParser">
         <fileset dir="${src.vol2}" includes="${vol2.main.src}"/>
         <attribute name="http://xml.org/sax/features/namespaces" value="true"/>
         <attribute name="http://apache.org/xml/features/xinclude" value="true"/>
         <xmlcatalog refid="allcatalogs"/>
      </xmlvalidate>
   </target>
   <target name="vol2.db-resolve.check">
      <uptodate property="vol2.db-resolve.notRequired" targetfile="${build.resolve}/resolved-standards.xml">
         <srcfiles includes="standards.xml" dir="${src.dir}/standards/"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-db}"/>
      </uptodate>
   </target>
   <target name="vol2.db-resolve" depends="init, vol2.db-resolve.check" unless="vol2.db-resolve.notRequired">
      <echo message="Resolve Volume 2 DB"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol2}">
         <arg line="${xslt.opts} -o ${build.resolve}/resolved-standards.xml ${src.dir}/standards/standards.xml ${xsl-styles.dir}/resolve/${xsl-resolve-db}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol2.resolve.check">
      <uptodate property="vol2-resolve.notRequired" targetfile="${build.resolve}/${vol2.resolve.src}">
         <srcfiles dir="${src.vol2}" includes="${vol2.all.src}"/>
         <srcfiles includes="resolved-standards.xml" dir="${build.resolve}/"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-vol2}"/>
      </uptodate>
   </target>
   <target name="vol2.resolve" unless="vol2-resolve.notRequired" depends="init, vol2.db-resolve, vol2.resolve.check">
      <echo message="Resolve Volume 2"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol2}">
         <arg line="${xslt.opts} -o ${build.resolve}/${vol2.resolve.src} ${src.vol2}/${vol2.main.src} ${xsl-styles.dir}/resolve/${xsl-resolve-vol2} dbname=resolved-standards.xml docid=vol2 documentdir=volume2 use.show.indexterms=${use.show.indexterms}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol2-olinks.check" depends="init">
      <uptodate property="vol2-olinks.notRequired" targetfile="${src.dir}/olinks/vol2-target.db">
         <srcfiles dir="${build.resolve}" includes="${vol2.resolve.src}"/>
         <srcfiles includes="standards.xml" dir="${src.dir}/standards/"/>
      </uptodate>
   </target>
   <target name="vol2.olinks" depends="init, vol2.resolve, vol2-olinks.check" unless="vol2-olinks.notRequired">
      <mkdir dir="${build.dir}/volume2"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol2}">
         <arg line="${build.resolve}/${vol2.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} target.database.document=${src.dir}/olinks/olinksdb.xml current.docid=vol2 collect.xref.targets=only"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <move file="${build.vol2}/target.db" tofile="${src.dir}/olinks/vol2-target.db"/>
   </target>
   <target name="vol2.getfigs" depends="svg">
      <mkdir dir="${build.dir}/volume2/figures"/>
      <copy preservelastmodified="true" todir="${build.dir}/htmlhelp/figures/volume2">
         <fileset dir="${build.dir}/volume2/figures">
            <include name="*.jpg"/>
         </fileset>
      </copy>
   </target>
   <target name="vol2.html.check" depends="init">
      <mkdir dir="${build.dir}/volume2"/>
      <uptodate property="vol2-html.notRequired" targetfile="${build.vol2}/index.html">
         <srcfiles dir="${build.resolve}" includes="${vol2.resolve.src}"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-xhtml}"/>
      </uptodate>
   </target>
   <target name="vol2.html" description="* Create Volume 2 in XHTML" depends="svg, vol2.resolve, vol2.html.check" unless="vol2-html.notRequired">
      <echo message="Create Volume 2 as chunked XHTML pages"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol2}">
         <arg line="${xslt.opts} ${build.resolve}/${vol2.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} ${internet.opts} docid=vol2 pdf.prefix=NISP-Vol2 use.para.numbering=${use.para.numbering} use.portal.design=${use.portal.design}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
   </target>
   <target name="vol2.pdf.check" depends="init">
      <uptodate property="vol2-pdf.notRequired" targetfile="${build.fo}/${vol2.pdf.file}">
         <srcfiles dir="${build.resolve}" includes="${vol2.resolve.src}"/>
         <srcfiles dir="${build.dir}/figures/" includes="*.jpg"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-fo}"/>
      </uptodate>
   </target>
   <target name="vol2.pdf" description="* Create Volume 2 in PDF" depends="layout-fo, svg, vol2.resolve, vol2.pdf.check" unless="vol2-pdf.notRequired">
      <echo message="Create Volume 2 print version"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.fo}">
         <arg line="${xslt.opts} -o vol2.fo ${build.resolve}/${vol2.resolve.src} ${xsl-fo.dir}/${xsl-fo} ${internet.opts} pdf.prefix=NISP-Vol2 use.para.numbering=${use.para.numbering}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <echo message="Transforming Volume 2.fo to PDF"/>
      <fop basedir="${build.fo}/" fofile="${build.fo}/vol2.fo" outfile="${build.fo}/vol2.pdf" format="application/pdf" messagelevel="${fop.message}"/>
      <echo message="Creating Volume 2 meta information using pdffix"/>
      <java classname="dk.stavnstrup.nisp.apps.MakeDocInfo" fork="yes" dir="${build.fo}">
         <arg line="&#34;${tool-version}&#34; &#34;Near Term&#34; vol2.pdf ${vol2.pdf.file}"/>
         <classpath refid="lib-fop-classpath"/>
      </java>
      <delete file="${build.fo}/vol2.pdf"/>
   </target>
   <target name="vol2.zip" description="* Create source archive of Volume 2">
      <tstamp/>
      <echo message="Creating src archive of Volume 2"/>
      <mkdir dir="${zip.dir}"/>
      <zip zipfile="${zip.dir}/nisp-src-vol2-${DSTAMP}.zip">
         <zipfileset dir="${src.dir}/volume2" prefix="volume2/" includes="**/*" excludes="**/*~,**/rtf/*.*, **/*/*.ced,**/*/*.fo"/>
      </zip>
   </target>
  

  
    <!-- Directories -->
   <property name="src.vol3" value="${src.dir}/volume3"/>
   <property name="build.vol3" value="${build.dir}/volume3"/><!-- Source file names -->
   <property name="vol3.main.src" value="vol3.xml"/>
   <property name="vol3.all.src" value="vol3.xml"/>
   <property name="vol3.resolve.src" value="vol3-resolved.xml"/>
   <property name="vol3.pdf.file" value="NISP-Vol3-v${src-version-major}${internet.postfix}.pdf"/>
   <property name="vol3.wml.file" value="vol3.wml"/>
   <property name="xsl-resolve-vol3" value="resolve3.xsl"/>
   <target name="vol3" description="* Create Volume 3 in XHTML and PDF" depends="vol3.html, vol3.pdf"/>
   <target name="vol3.valid">
      <xmlvalidate failonerror="no" classname="org.apache.xerces.parsers.SAXParser">
         <fileset dir="${src.vol3}" includes="${vol3.main.src}"/>
         <attribute name="http://xml.org/sax/features/namespaces" value="true"/>
         <attribute name="http://apache.org/xml/features/xinclude" value="true"/>
         <xmlcatalog refid="allcatalogs"/>
      </xmlvalidate>
   </target>
   <target name="vol3.db-resolve.check">
      <uptodate property="vol3.db-resolve.notRequired" targetfile="${build.resolve}/resolved-standards.xml">
         <srcfiles includes="standards.xml" dir="${src.dir}/standards/"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-db}"/>
      </uptodate>
   </target>
   <target name="vol3.db-resolve" depends="init, vol3.db-resolve.check" unless="vol3.db-resolve.notRequired">
      <echo message="Resolve Volume 3 DB"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol3}">
         <arg line="${xslt.opts} -o ${build.resolve}/resolved-standards.xml ${src.dir}/standards/standards.xml ${xsl-styles.dir}/resolve/${xsl-resolve-db}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol3.resolve.check">
      <uptodate property="vol3-resolve.notRequired" targetfile="${build.resolve}/${vol3.resolve.src}">
         <srcfiles dir="${src.vol3}" includes="${vol3.all.src}"/>
         <srcfiles includes="resolved-standards.xml" dir="${build.resolve}/"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-vol3}"/>
      </uptodate>
   </target>
   <target name="vol3.resolve" unless="vol3-resolve.notRequired" depends="init, vol3.db-resolve, vol3.resolve.check">
      <echo message="Resolve Volume 3"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol3}">
         <arg line="${xslt.opts} -o ${build.resolve}/${vol3.resolve.src} ${src.vol3}/${vol3.main.src} ${xsl-styles.dir}/resolve/${xsl-resolve-vol3} dbname=resolved-standards.xml docid=vol3 documentdir=volume3 use.show.indexterms=${use.show.indexterms}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol3-olinks.check" depends="init">
      <uptodate property="vol3-olinks.notRequired" targetfile="${src.dir}/olinks/vol3-target.db">
         <srcfiles dir="${build.resolve}" includes="${vol3.resolve.src}"/>
         <srcfiles includes="standards.xml" dir="${src.dir}/standards/"/>
      </uptodate>
   </target>
   <target name="vol3.olinks" depends="init, vol3.resolve, vol3-olinks.check" unless="vol3-olinks.notRequired">
      <mkdir dir="${build.dir}/volume3"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol3}">
         <arg line="${build.resolve}/${vol3.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} target.database.document=${src.dir}/olinks/olinksdb.xml current.docid=vol3 collect.xref.targets=only"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <move file="${build.vol3}/target.db" tofile="${src.dir}/olinks/vol3-target.db"/>
   </target>
   <target name="vol3.getfigs" depends="svg">
      <mkdir dir="${build.dir}/volume3/figures"/>
      <copy preservelastmodified="true" todir="${build.dir}/htmlhelp/figures/volume3">
         <fileset dir="${build.dir}/volume3/figures">
            <include name="*.jpg"/>
         </fileset>
      </copy>
   </target>
   <target name="vol3.html.check" depends="init">
      <mkdir dir="${build.dir}/volume3"/>
      <uptodate property="vol3-html.notRequired" targetfile="${build.vol3}/index.html">
         <srcfiles dir="${build.resolve}" includes="${vol3.resolve.src}"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-xhtml}"/>
      </uptodate>
   </target>
   <target name="vol3.html" description="* Create Volume 3 in XHTML" depends="svg, vol3.resolve, vol3.html.check" unless="vol3-html.notRequired">
      <echo message="Create Volume 3 as chunked XHTML pages"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol3}">
         <arg line="${xslt.opts} ${build.resolve}/${vol3.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} ${internet.opts} docid=vol3 pdf.prefix=NISP-Vol3 use.para.numbering=${use.para.numbering} use.portal.design=${use.portal.design}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
   </target>
   <target name="vol3.pdf.check" depends="init">
      <uptodate property="vol3-pdf.notRequired" targetfile="${build.fo}/${vol3.pdf.file}">
         <srcfiles dir="${build.resolve}" includes="${vol3.resolve.src}"/>
         <srcfiles dir="${build.dir}/figures/" includes="*.jpg"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-fo}"/>
      </uptodate>
   </target>
   <target name="vol3.pdf" description="* Create Volume 3 in PDF" depends="layout-fo, svg, vol3.resolve, vol3.pdf.check" unless="vol3-pdf.notRequired">
      <echo message="Create Volume 3 print version"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.fo}">
         <arg line="${xslt.opts} -o vol3.fo ${build.resolve}/${vol3.resolve.src} ${xsl-fo.dir}/${xsl-fo} ${internet.opts} pdf.prefix=NISP-Vol3 use.para.numbering=${use.para.numbering}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <echo message="Transforming Volume 3.fo to PDF"/>
      <fop basedir="${build.fo}/" fofile="${build.fo}/vol3.fo" outfile="${build.fo}/vol3.pdf" format="application/pdf" messagelevel="${fop.message}"/>
      <echo message="Creating Volume 3 meta information using pdffix"/>
      <java classname="dk.stavnstrup.nisp.apps.MakeDocInfo" fork="yes" dir="${build.fo}">
         <arg line="&#34;${tool-version}&#34; &#34;Mid to Far term&#34; vol3.pdf ${vol3.pdf.file}"/>
         <classpath refid="lib-fop-classpath"/>
      </java>
      <delete file="${build.fo}/vol3.pdf"/>
   </target>
   <target name="vol3.zip" description="* Create source archive of Volume 3">
      <tstamp/>
      <echo message="Creating src archive of Volume 3"/>
      <mkdir dir="${zip.dir}"/>
      <zip zipfile="${zip.dir}/nisp-src-vol3-${DSTAMP}.zip">
         <zipfileset dir="${src.dir}/volume3" prefix="volume3/" includes="**/*" excludes="**/*~,**/rtf/*.*, **/*/*.ced,**/*/*.fo"/>
      </zip>
   </target>
  

  
    <!-- Directories -->
   <property name="src.vol4" value="${src.dir}/volume4"/>
   <property name="build.vol4" value="${build.dir}/volume4"/><!-- Source file names -->
   <property name="vol4.main.src" value="vol4.xml"/>
   <property name="vol4.all.src" value="vol4.xml"/>
   <property name="vol4.resolve.src" value="vol4-resolved.xml"/>
   <property name="vol4.pdf.file" value="NISP-Vol4-v${src-version-major}${internet.postfix}.pdf"/>
   <property name="vol4.wml.file" value="vol4.wml"/>
   <property name="xsl-resolve-vol4" value="resolve4.xsl"/>
   <target name="vol4" description="* Create Volume 4 in XHTML and PDF" depends="vol4.html, vol4.pdf"/>
   <target name="vol4.valid">
      <xmlvalidate failonerror="no" classname="org.apache.xerces.parsers.SAXParser">
         <fileset dir="${src.vol4}" includes="${vol4.main.src}"/>
         <attribute name="http://xml.org/sax/features/namespaces" value="true"/>
         <attribute name="http://apache.org/xml/features/xinclude" value="true"/>
         <xmlcatalog refid="allcatalogs"/>
      </xmlvalidate>
   </target>
   <target name="vol4.db-resolve.check">
      <uptodate property="vol4.db-resolve.notRequired" targetfile="${build.resolve}/resolved-standards.xml">
         <srcfiles includes="standards.xml" dir="${src.dir}/standards/"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-db}"/>
      </uptodate>
   </target>
   <target name="vol4.db-resolve" depends="init, vol4.db-resolve.check" unless="vol4.db-resolve.notRequired">
      <echo message="Resolve Volume 4 DB"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol4}">
         <arg line="${xslt.opts} -o ${build.resolve}/resolved-standards.xml ${src.dir}/standards/standards.xml ${xsl-styles.dir}/resolve/${xsl-resolve-db}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol4.resolve.check">
      <uptodate property="vol4-resolve.notRequired" targetfile="${build.resolve}/${vol4.resolve.src}">
         <srcfiles dir="${src.vol4}" includes="${vol4.all.src}"/>
         <srcfiles includes="resolved-standards.xml" dir="${build.resolve}/"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-vol4}"/>
      </uptodate>
   </target>
   <target name="vol4.resolve" unless="vol4-resolve.notRequired" depends="init, vol4.db-resolve, vol4.resolve.check">
      <echo message="Resolve Volume 4"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol4}">
         <arg line="${xslt.opts} -o ${build.resolve}/${vol4.resolve.src} ${src.vol4}/${vol4.main.src} ${xsl-styles.dir}/resolve/${xsl-resolve-vol4} dbname=resolved-standards.xml docid=vol4 documentdir=volume4 use.show.indexterms=${use.show.indexterms}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol4-olinks.check" depends="init">
      <uptodate property="vol4-olinks.notRequired" targetfile="${src.dir}/olinks/vol4-target.db">
         <srcfiles dir="${build.resolve}" includes="${vol4.resolve.src}"/>
         <srcfiles includes="standards.xml" dir="${src.dir}/standards/"/>
      </uptodate>
   </target>
   <target name="vol4.olinks" depends="init, vol4.resolve, vol4-olinks.check" unless="vol4-olinks.notRequired">
      <mkdir dir="${build.dir}/volume4"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol4}">
         <arg line="${build.resolve}/${vol4.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} target.database.document=${src.dir}/olinks/olinksdb.xml current.docid=vol4 collect.xref.targets=only"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <move file="${build.vol4}/target.db" tofile="${src.dir}/olinks/vol4-target.db"/>
   </target>
   <target name="vol4.getfigs" depends="svg">
      <mkdir dir="${build.dir}/volume4/figures"/>
      <copy preservelastmodified="true" todir="${build.dir}/htmlhelp/figures/volume4">
         <fileset dir="${build.dir}/volume4/figures">
            <include name="*.jpg"/>
         </fileset>
      </copy>
   </target>
   <target name="vol4.html.check" depends="init">
      <mkdir dir="${build.dir}/volume4"/>
      <uptodate property="vol4-html.notRequired" targetfile="${build.vol4}/index.html">
         <srcfiles dir="${build.resolve}" includes="${vol4.resolve.src}"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-xhtml}"/>
      </uptodate>
   </target>
   <target name="vol4.html" description="* Create Volume 4 in XHTML" depends="svg, vol4.resolve, vol4.html.check" unless="vol4-html.notRequired">
      <echo message="Create Volume 4 as chunked XHTML pages"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol4}">
         <arg line="${xslt.opts} ${build.resolve}/${vol4.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} ${internet.opts} docid=vol4 pdf.prefix=NISP-Vol4 use.para.numbering=${use.para.numbering} use.portal.design=${use.portal.design}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
   </target>
   <target name="vol4.pdf.check" depends="init">
      <uptodate property="vol4-pdf.notRequired" targetfile="${build.fo}/${vol4.pdf.file}">
         <srcfiles dir="${build.resolve}" includes="${vol4.resolve.src}"/>
         <srcfiles dir="${build.dir}/figures/" includes="*.jpg"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-fo}"/>
      </uptodate>
   </target>
   <target name="vol4.pdf" description="* Create Volume 4 in PDF" depends="layout-fo, svg, vol4.resolve, vol4.pdf.check" unless="vol4-pdf.notRequired">
      <echo message="Create Volume 4 print version"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.fo}">
         <arg line="${xslt.opts} -o vol4.fo ${build.resolve}/${vol4.resolve.src} ${xsl-fo.dir}/${xsl-fo} ${internet.opts} pdf.prefix=NISP-Vol4 use.para.numbering=${use.para.numbering}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <echo message="Transforming Volume 4.fo to PDF"/>
      <fop basedir="${build.fo}/" fofile="${build.fo}/vol4.fo" outfile="${build.fo}/vol4.pdf" format="application/pdf" messagelevel="${fop.message}"/>
      <echo message="Creating Volume 4 meta information using pdffix"/>
      <java classname="dk.stavnstrup.nisp.apps.MakeDocInfo" fork="yes" dir="${build.fo}">
         <arg line="&#34;${tool-version}&#34; &#34;Interoperability Profile Guidance&#34; vol4.pdf ${vol4.pdf.file}"/>
         <classpath refid="lib-fop-classpath"/>
      </java>
      <delete file="${build.fo}/vol4.pdf"/>
   </target>
   <target name="vol4.zip" description="* Create source archive of Volume 4">
      <tstamp/>
      <echo message="Creating src archive of Volume 4"/>
      <mkdir dir="${zip.dir}"/>
      <zip zipfile="${zip.dir}/nisp-src-vol4-${DSTAMP}.zip">
         <zipfileset dir="${src.dir}/volume4" prefix="volume4/" includes="**/*" excludes="**/*~,**/rtf/*.*, **/*/*.ced,**/*/*.fo"/>
      </zip>
   </target>
  

  
    <!-- Directories -->
   <property name="src.vol5" value="${src.dir}/volume5"/>
   <property name="build.vol5" value="${build.dir}/volume5"/><!-- Source file names -->
   <property name="vol5.main.src" value="vol5.xml"/>
   <property name="vol5.all.src" value="vol5.xml"/>
   <property name="vol5.resolve.src" value="vol5-resolved.xml"/>
   <property name="vol5.pdf.file" value="NISP-Vol5-v${src-version-major}${internet.postfix}.pdf"/>
   <property name="vol5.wml.file" value="vol5.wml"/>
   <property name="xsl-resolve-vol5" value="resolve5.xsl"/>
   <target name="vol5" description="* Create Volume 5 in XHTML and PDF" depends="vol5.html, vol5.pdf"/>
   <target name="vol5.valid">
      <xmlvalidate failonerror="no" classname="org.apache.xerces.parsers.SAXParser">
         <fileset dir="${src.vol5}" includes="${vol5.main.src}"/>
         <attribute name="http://xml.org/sax/features/namespaces" value="true"/>
         <attribute name="http://apache.org/xml/features/xinclude" value="true"/>
         <xmlcatalog refid="allcatalogs"/>
      </xmlvalidate>
   </target>
   <target name="vol5.db-resolve.check">
      <uptodate property="vol5.db-resolve.notRequired" targetfile="${build.resolve}/resolved-standards.xml">
         <srcfiles includes="standards.xml" dir="${src.dir}/standards/"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-db}"/>
      </uptodate>
   </target>
   <target name="vol5.db-resolve" depends="init, vol5.db-resolve.check" unless="vol5.db-resolve.notRequired">
      <echo message="Resolve Volume 5 DB"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol5}">
         <arg line="${xslt.opts} -o ${build.resolve}/resolved-standards.xml ${src.dir}/standards/standards.xml ${xsl-styles.dir}/resolve/${xsl-resolve-db}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol5.resolve.check">
      <uptodate property="vol5-resolve.notRequired" targetfile="${build.resolve}/${vol5.resolve.src}">
         <srcfiles dir="${src.vol5}" includes="${vol5.all.src}"/>
         <srcfiles includes="resolved-standards.xml" dir="${build.resolve}/"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-vol5}"/>
      </uptodate>
   </target>
   <target name="vol5.resolve" unless="vol5-resolve.notRequired" depends="init, vol5.db-resolve, vol5.resolve.check">
      <echo message="Resolve Volume 5"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol5}">
         <arg line="${xslt.opts} -o ${build.resolve}/${vol5.resolve.src} ${src.vol5}/${vol5.main.src} ${xsl-styles.dir}/resolve/${xsl-resolve-vol5} dbname=resolved-standards.xml docid=vol5 documentdir=volume5 use.show.indexterms=${use.show.indexterms}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol5-olinks.check" depends="init">
      <uptodate property="vol5-olinks.notRequired" targetfile="${src.dir}/olinks/vol5-target.db">
         <srcfiles dir="${build.resolve}" includes="${vol5.resolve.src}"/>
         <srcfiles includes="standards.xml" dir="${src.dir}/standards/"/>
      </uptodate>
   </target>
   <target name="vol5.olinks" depends="init, vol5.resolve, vol5-olinks.check" unless="vol5-olinks.notRequired">
      <mkdir dir="${build.dir}/volume5"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol5}">
         <arg line="${build.resolve}/${vol5.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} target.database.document=${src.dir}/olinks/olinksdb.xml current.docid=vol5 collect.xref.targets=only"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <move file="${build.vol5}/target.db" tofile="${src.dir}/olinks/vol5-target.db"/>
   </target>
   <target name="vol5.getfigs" depends="svg">
      <mkdir dir="${build.dir}/volume5/figures"/>
      <copy preservelastmodified="true" todir="${build.dir}/htmlhelp/figures/volume5">
         <fileset dir="${build.dir}/volume5/figures">
            <include name="*.jpg"/>
         </fileset>
      </copy>
   </target>
   <target name="vol5.html.check" depends="init">
      <mkdir dir="${build.dir}/volume5"/>
      <uptodate property="vol5-html.notRequired" targetfile="${build.vol5}/index.html">
         <srcfiles dir="${build.resolve}" includes="${vol5.resolve.src}"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-xhtml}"/>
      </uptodate>
   </target>
   <target name="vol5.html" description="* Create Volume 5 in XHTML" depends="svg, vol5.resolve, vol5.html.check" unless="vol5-html.notRequired">
      <echo message="Create Volume 5 as chunked XHTML pages"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol5}">
         <jvmarg value="-Xss512k"/>
         <arg line="${xslt.opts} ${build.resolve}/${vol5.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} ${internet.opts} docid=vol5 pdf.prefix=NISP-Vol5 use.para.numbering=${use.para.numbering} use.portal.design=${use.portal.design}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
   </target>
   <target name="vol5.pdf.check" depends="init">
      <uptodate property="vol5-pdf.notRequired" targetfile="${build.fo}/${vol5.pdf.file}">
         <srcfiles dir="${build.resolve}" includes="${vol5.resolve.src}"/>
         <srcfiles dir="${build.dir}/figures/" includes="*.jpg"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-fo}"/>
      </uptodate>
   </target>
   <target name="vol5.pdf" description="* Create Volume 5 in PDF" depends="layout-fo, svg, vol5.resolve, vol5.pdf.check" unless="vol5-pdf.notRequired">
      <echo message="Create Volume 5 print version"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.fo}">
         <jvmarg value="-Xss512k"/>
         <arg line="${xslt.opts} -o vol5.fo ${build.resolve}/${vol5.resolve.src} ${xsl-fo.dir}/${xsl-fo} ${internet.opts} pdf.prefix=NISP-Vol5 use.para.numbering=${use.para.numbering}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <echo message="Transforming Volume 5.fo to PDF"/>
      <fop basedir="${build.fo}/" fofile="${build.fo}/vol5.fo" outfile="${build.fo}/vol5.pdf" format="application/pdf" messagelevel="${fop.message}"/>
      <echo message="Creating Volume 5 meta information using pdffix"/>
      <java classname="dk.stavnstrup.nisp.apps.MakeDocInfo" fork="yes" dir="${build.fo}">
         <arg line="&#34;${tool-version}&#34; &#34;NISP Design Rules&#34; vol5.pdf ${vol5.pdf.file}"/>
         <classpath refid="lib-fop-classpath"/>
      </java>
      <delete file="${build.fo}/vol5.pdf"/>
   </target>
   <target name="vol5.zip" description="* Create source archive of Volume 5">
      <tstamp/>
      <echo message="Creating src archive of Volume 5"/>
      <mkdir dir="${zip.dir}"/>
      <zip zipfile="${zip.dir}/nisp-src-vol5-${DSTAMP}.zip">
         <zipfileset dir="${src.dir}/volume5" prefix="volume5/" includes="**/*" excludes="**/*~,**/rtf/*.*, **/*/*.ced,**/*/*.fo"/>
      </zip>
   </target>
  

  
    <!-- Directories -->
   <property name="src.vol6" value="${src.dir}/volume6-annexes"/>
   <property name="build.vol6" value="${build.dir}/volume6-annexes"/><!-- Source file names -->
   <property name="vol6.main.src" value="vol6.xml"/>
   <property name="vol6.all.src" value="vol6.xml"/>
   <property name="vol6.resolve.src" value="vol6-resolved.xml"/>
   <property name="vol6.pdf.file" value="NISP-Vol6-v${src-version-major}${internet.postfix}.pdf"/>
   <property name="vol6.wml.file" value="vol6.wml"/>
   <property name="xsl-resolve-vol6" value="resolve.xsl"/>
   <target name="vol6" description="* Create Volume 6 in XHTML and PDF" depends="vol6.html, vol6.pdf"/>
   <target name="vol6.valid">
      <xmlvalidate failonerror="no" classname="org.apache.xerces.parsers.SAXParser">
         <fileset dir="${src.vol6}" includes="${vol6.main.src}"/>
         <attribute name="http://xml.org/sax/features/namespaces" value="true"/>
         <attribute name="http://apache.org/xml/features/xinclude" value="true"/>
         <xmlcatalog refid="allcatalogs"/>
      </xmlvalidate>
   </target>
   <target name="vol6.resolve.check">
      <uptodate property="vol6-resolve.notRequired" targetfile="${build.resolve}/${vol6.resolve.src}">
         <srcfiles dir="${src.vol6}" includes="${vol6.all.src}"/>
         <srcfiles dir="${xsl-styles.dir}/resolve" includes="${xsl-resolve-vol6}"/>
      </uptodate>
   </target>
   <target name="vol6.resolve" unless="vol6-resolve.notRequired" depends="init, vol6.resolve.check">
      <echo message="Resolve Volume 6"/>
      <java fork="yes" classname="${xslt.class}" dir="${src.vol6}">
         <arg line="${xslt.opts} -o ${build.resolve}/${vol6.resolve.src} ${src.vol6}/${vol6.main.src} ${xsl-styles.dir}/resolve/${xsl-resolve-vol6} docid=vol6 documentdir=volume6-annexes use.show.indexterms=${use.show.indexterms}"/>
         <classpath refid="lib-saxon-classpath"/>
         <jvmarg value="${use.sax}"/>
         <jvmarg value="${use.dom}"/>
         <jvmarg value="${use.xinc}"/>
      </java>
   </target>
   <target name="vol6-olinks.check" depends="init">
      <uptodate property="vol6-olinks.notRequired" targetfile="${src.dir}/olinks/vol6-target.db">
         <srcfiles dir="${build.resolve}" includes="${vol6.resolve.src}"/>
      </uptodate>
   </target>
   <target name="vol6.olinks" depends="init, vol6.resolve, vol6-olinks.check" unless="vol6-olinks.notRequired">
      <mkdir dir="${build.dir}/volume6-annexes"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol6}">
         <arg line="${build.resolve}/${vol6.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} target.database.document=${src.dir}/olinks/olinksdb.xml current.docid=vol6 collect.xref.targets=only"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <move file="${build.vol6}/target.db" tofile="${src.dir}/olinks/vol6-target.db"/>
   </target>
   <target name="vol6.getfigs" depends="svg">
      <mkdir dir="${build.dir}/volume6-annexes/figures"/>
      <copy preservelastmodified="true" todir="${build.dir}/htmlhelp/figures/volume6-annexes">
         <fileset dir="${build.dir}/volume6-annexes/figures">
            <include name="*.jpg"/>
         </fileset>
      </copy>
   </target>
   <target name="vol6.html.check" depends="init">
      <mkdir dir="${build.dir}/volume6-annexes"/>
      <uptodate property="vol6-html.notRequired" targetfile="${build.vol6}/index.html">
         <srcfiles dir="${build.resolve}" includes="${vol6.resolve.src}"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-xhtml}"/>
      </uptodate>
   </target>
   <target name="vol6.html" description="* Create Volume 6 in XHTML" depends="svg, vol6.resolve, vol6.html.check" unless="vol6-html.notRequired">
      <echo message="Create Volume 6 as chunked XHTML pages"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.vol6}">
         <arg line="${xslt.opts} ${build.resolve}/${vol6.resolve.src} ${xsl-xhtml.dir}/${xsl-chunk} ${internet.opts} docid=vol6 pdf.prefix=NISP-Vol6 use.para.numbering=${use.para.numbering} use.portal.design=${use.portal.design}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
   </target>
   <target name="vol6.pdf.check" depends="init">
      <uptodate property="vol6-pdf.notRequired" targetfile="${build.fo}/${vol6.pdf.file}">
         <srcfiles dir="${build.resolve}" includes="${vol6.resolve.src}"/>
         <srcfiles dir="${build.dir}/figures/" includes="*.jpg"/>
         <srcfiles dir="${xsl-styles.dir}" includes="${xsl-all-fo}"/>
      </uptodate>
   </target>
   <target name="vol6.pdf" description="* Create Volume 6 in PDF" depends="layout-fo, svg, vol6.resolve, vol6.pdf.check" unless="vol6-pdf.notRequired">
      <echo message="Create Volume 6 print version"/>
      <java fork="yes" classname="${xslt.class}" dir="${build.fo}">
         <arg line="${xslt.opts} -o vol6.fo ${build.resolve}/${vol6.resolve.src} ${xsl-fo.dir}/${xsl-fo} ${internet.opts} pdf.prefix=NISP-Vol6 use.para.numbering=${use.para.numbering}"/>
         <classpath refid="lib-saxon-classpath"/>
      </java>
      <echo message="Transforming Volume 6.fo to PDF"/>
      <fop basedir="${build.fo}/" fofile="${build.fo}/vol6.fo" outfile="${build.fo}/vol6.pdf" format="application/pdf" messagelevel="${fop.message}"/>
      <echo message="Creating Volume 6 meta information using pdffix"/>
      <java classname="dk.stavnstrup.nisp.apps.MakeDocInfo" fork="yes" dir="${build.fo}">
         <arg line="&#34;${tool-version}&#34; &#34;NISP - Annexes&#34; vol6.pdf ${vol6.pdf.file}"/>
         <classpath refid="lib-fop-classpath"/>
      </java>
      <delete file="${build.fo}/vol6.pdf"/>
   </target>
   <target name="vol6.zip" description="* Create source archive of Volume 6">
      <tstamp/>
      <echo message="Creating src archive of Volume 6"/>
      <mkdir dir="${zip.dir}"/>
      <zip zipfile="${zip.dir}/nisp-src-vol6-${DSTAMP}.zip">
         <zipfileset dir="${src.dir}/volume6-annexes" prefix="volume6-annexes/" includes="**/*" excludes="**/*~,**/rtf/*.*, **/*/*.ced,**/*/*.fo"/>
      </zip>
   </target>
  




</project>